package com.try03.Client3.view;

import com.try03.Client3.model.clientUser;
import com.try03.Client3.model.conServer;
import com.try03.common.Message;

import javax.swing.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;

/**
 * Created by ztc on 15-11-2.
 */
public class chat extends JFrame implements ActionListener,KeyListener,Runnable{
    String userid,friendid;
    JTextArea jta;
    JScrollPane jsp;
    JTextField jtf;
    JButton jb;
    JPanel jp;
    public static void main(String[] args){
        chat ch=new chat("ni","ta");
    }

    public chat(String userId,String friendId) {
        this.userid = userId;
        this.friendid = friendId;


        jta = new JTextArea();
        jsp = new JScrollPane(jta);
        jtf = new JTextField(25);
        jtf.addKeyListener(this);
        jb = new JButton("发送");
        jb.addActionListener(this);
        jp = new JPanel();
        jta.setAutoscrolls(true);
        jta.setEditable(false);
        jp.add(jtf);
        jp.add(jb);

        this.add(jsp, "Center");
        this.add(jp, "South");

        this.setTitle(userId + " 正在和 " + friendId + " 聊天.");
        this.setSize(400, 300);
        this.setLocation(500, 300);
        this.setResizable(false);
        this.setVisible(true);
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

    }


    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() == jb) {
            jta.append(this.userid + " : " + jtf.getText() + "\r\n");
            Message m = new Message();
            m.setSender(this.userid);
            m.setGetter(this.friendid);
            m.setMsg(jtf.getText());
            try {
                System.out.println(clientUser.getSocket()+"发送");
                clientUser.getOOS().writeObject(m);
            } catch (IOException e1) {
                e1.printStackTrace();
            }
        }
    }

    @Override
    public void keyTyped(KeyEvent e) {

    }

    @Override
    public void keyPressed(KeyEvent e) {
        if(e.getKeyCode()==KeyEvent.VK_ENTER){
            jta.append(this.userid+" : "+jtf.getText() + "\r\n");
            Message m=new Message();
            m.setSender(this.userid);
            m.setGetter(this.friendid);
            m.setMsg(jtf.getText());
            try {
                ObjectOutputStream oos = new ObjectOutputStream(clientUser.getSocket().getOutputStream());
                oos.writeObject(m);
                oos.flush();
            } catch (IOException e1) {
                e1.printStackTrace();
            }
        }
    }

    @Override
    public void keyReleased(KeyEvent e) {

    }

    @Override
    public void run() {

        try {
            while(true) {
                System.out.println(clientUser.getSocket() + "接收");
                //ObjectInputStream ois=new ObjectInputStream(clientUser.getSocket().getInputStream());
                Message m = (Message)clientUser.getOIS().readObject();
                jta.append(m.getSender() + " 对 " + m.getGetter() + " 说:" + m.getMsg() + "\r\n");
            }
        } catch (IOException e) {
            e.printStackTrace();
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        }

    }
}
